// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator nestgraphql {
  provider               = "node node_modules/prisma-nestjs-graphql"
  output                 = "../src/@generated/prisma-nestjs-graphql"
  fields_Validator_from  = "class-validator"
  fields_Validator_input = true
}

model Donation {
  id        Int      @id @default(autoincrement())
  ///@Validator.Min(1)
  count     Int
  message   String?
  team      String?
  user      User     @relation(fields: [userId], references: id)
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("donation")
}

model User {
  id        Int        @id @default(autoincrement())
  ///@Validator.MinLength(2)
  ///이름
  name      String
  ///@Validator.IsEmail()
  ///이메일
  email     String     @unique
  ///@HideField()
  password String
  posts     Post[]
  donations Donation[]
  role Role

  @@map("user")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: id)
  authorId  Int
  views     Int      @default(0)
  likes     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("post")
}

///권한
enum Role {
	ADMIN
	USER
}
